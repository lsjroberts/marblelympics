-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.OccasionResults exposing (event, occasionEvent, results)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


event : SelectionSet decodesTo Api.Object.Event -> SelectionSet decodesTo Api.Object.OccasionResults
event object_ =
    Object.selectionForCompositeField "event" [] object_ identity


occasionEvent : SelectionSet decodesTo Api.Object.OccasionEvent -> SelectionSet decodesTo Api.Object.OccasionResults
occasionEvent object_ =
    Object.selectionForCompositeField "occasionEvent" [] object_ identity


results : SelectionSet decodesTo Api.Object.OccasionResult -> SelectionSet (List decodesTo) Api.Object.OccasionResults
results object_ =
    Object.selectionForCompositeField "results" [] object_ (identity >> Decode.list)
