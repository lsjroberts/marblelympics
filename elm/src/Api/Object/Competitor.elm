-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Competitor exposing (event, id, marble, occasion, points, score, team)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


event : SelectionSet decodesTo Api.Object.Event -> SelectionSet decodesTo Api.Object.Competitor
event object_ =
    Object.selectionForCompositeField "event" [] object_ identity


id : SelectionSet Api.ScalarCodecs.Id Api.Object.Competitor
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


marble : SelectionSet decodesTo Api.Object.Marble -> SelectionSet decodesTo Api.Object.Competitor
marble object_ =
    Object.selectionForCompositeField "marble" [] object_ identity


occasion : SelectionSet decodesTo Api.Object.Occasion -> SelectionSet decodesTo Api.Object.Competitor
occasion object_ =
    Object.selectionForCompositeField "occasion" [] object_ identity


points : SelectionSet (Maybe Int) Api.Object.Competitor
points =
    Object.selectionForField "(Maybe Int)" "points" [] (Decode.int |> Decode.nullable)


score : SelectionSet (Maybe Int) Api.Object.Competitor
score =
    Object.selectionForField "(Maybe Int)" "score" [] (Decode.int |> Decode.nullable)


team : SelectionSet decodesTo Api.Object.Team -> SelectionSet decodesTo Api.Object.Competitor
team object_ =
    Object.selectionForCompositeField "team" [] object_ identity
